services:
    app:
        build:
            context: ..
            dockerfile: ./docker/Dockerfile.production
        image: ${DOCKER_IMAGE_NAME:-laravel-app}:latest
        ports:
            - "${APP_PORT:-80}:80"
        environment:
            - APP_ENV=production
            - APP_DEBUG=false
        volumes:
            - ./storage:/var/www/html/storage
        networks:
            - laravel
        depends_on:
            - database
            - redis
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:80/up"]
            interval: 30s
            timeout: 10s
            retries: 3

    database:
        image: postgres:17
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - laravel
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        image: redis:7-alpine
        command: redis-server --appendonly yes
        volumes:
            - redis_data:/data
        networks:
            - laravel
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 3

volumes:
    postgres_data:
        driver: local
    redis_data:
        driver: local

networks:
    laravel:
        driver: bridge